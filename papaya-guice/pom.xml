<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <name>papaya-guice</name>
  <description>Utilities for lifecycle-managed services using papaya and guice</description>
  <url>https://github.com/joshng/papaya</url>
  <developers>
    <developer>
      <organization>joshng.com</organization>
      <organizationUrl>http://joshng.com</organizationUrl>
    </developer>
  </developers>

  <properties>
    <guice.version>4.1.0</guice.version>
    <github.global.server>github</github.global.server>
    <local.maven.repository.path>${project.build.directory}/mvn-repo</local.maven.repository.path>
  </properties>

  <groupId>com.joshng.util</groupId>
  <artifactId>papaya-guice</artifactId>
  <version>0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <scm>
    <url>https://github.com/joshng/papaya</url>
    <developerConnection>scm:git:git@github.com:joshng/papaya.git</developerConnection>
    <tag>HEAD</tag>
  </scm>

  <distributionManagement>
    <repository>
      <id>internal.repo</id>
      <name>Temporary Staging Repository</name>
      <url>file://${local.maven.repository.path}</url>
    </repository>
  </distributionManagement>

  <dependencies>
    <dependency>
      <groupId>com.joshng.util</groupId>
      <artifactId>papaya</artifactId>
      <version>0-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>com.google.inject</groupId>
      <artifactId>guice</artifactId>
      <version>${guice.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.inject.extensions</groupId>
      <artifactId>guice-multibindings</artifactId>
      <version>${guice.version}</version>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <defaultGoal>install</defaultGoal>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>2.3.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>2.3.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>2.2.1</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>buildnumber-maven-plugin</artifactId>
          <version>1.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>2.9.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-scm-plugin</artifactId>
          <version>1.9</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-scm-plugin</artifactId>
        <version>1.9</version>
        <configuration>
          <connectionType>developerConnection</connectionType>
          <providerImplementations>
            <git>jgit</git>
          </providerImplementations>
        </configuration>
        <executions>
          <execution>
            <id>check out current state of repository</id>
            <phase>deploy</phase>
            <goals>
              <goal>checkout</goal>
            </goals>
            <configuration>
              <checkoutDirectory>${local.maven.repository.path}</checkoutDirectory>
              <connectionType>developerConnection</connectionType>
              <developerConnectionUrl>scm:git:https://github.com/joshng/papaya.git</developerConnectionUrl>
              <scmVersion>mvn-repo</scmVersion>
              <scmVersionType>branch</scmVersionType>
              <providerImplementations>
                <git>jgit</git>
              </providerImplementations>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.apache.maven.scm</groupId>
            <artifactId>maven-scm-provider-jgit</artifactId>
            <version>1.9</version>
          </dependency>
        </dependencies>
      </plugin>

      <plugin>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>2.8.1</version>
        <configuration>
          <altDeploymentRepository>internal.repo::default::file://${local.maven.repository.path}</altDeploymentRepository>
        </configuration>
        <executions>
          <execution>
            <id>default-deploy</id>
            <configuration>
              <skip>true</skip>
              <!-- need to disable default-deploy otherwise it'll run before our git clone above -->
            </configuration>
          </execution>
          <execution>
            <id>deploy artifacts to checked out repository</id>
            <phase>deploy</phase>
            <goals>
              <goal>deploy</goal>
            </goals>
            <configuration>
              <altDeploymentRepository>build.repo::default::file://${local.maven.repository.path}</altDeploymentRepository>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-sources</id>
            <phase>verify</phase>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.github.github</groupId>
        <artifactId>site-maven-plugin</artifactId>
        <version>0.11</version>
        <configuration>
          <message>Maven artifacts for ${project.version}</message>  <!-- git commit message -->
          <noJekyll>true</noJekyll>                                  <!-- disable webpage processing -->
          <outputDirectory>${local.maven.repository.path}</outputDirectory> <!-- matches distribution management repository url above -->
          <branch>refs/heads/mvn-repo</branch>                       <!-- remote branch name -->
          <includes><include>**/*</include></includes>
          <excludes>.git/**/*</excludes>
          <repositoryName>papaya</repositoryName>      <!-- github repo name -->
          <repositoryOwner>joshng</repositoryOwner>    <!-- github username  -->
          <merge>true</merge>
        </configuration>
        <executions>
          <!-- run site-maven-plugin's 'site' target as part of the build's normal 'deploy' phase -->
          <execution>
            <goals>
              <goal>site</goal>
            </goals>
            <phase>deploy</phase>
          </execution>
        </executions>
      </plugin>
      <!--<plugin>-->
      <!--<artifactId>maven-javadoc-plugin</artifactId>-->
      <!--<executions>-->
      <!--<execution>-->
      <!--<id>attach-javadocs</id>-->
      <!--<goals>-->
      <!--<goal>jar</goal>-->
      <!--</goals>-->
      <!--</execution>-->
      <!--</executions>-->
      <!--</plugin>-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <!-- Adds Implementation-Title etc. to Manifest. See https://maven.apache.org/shared/maven-archiver/
              DropWizard looks at some of these. -->
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
            </manifest>
            <!-- Also include git SHA -->
            <manifestEntries>
              <Implementation-Build>${buildNumber}</Implementation-Build>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>
      <!-- buildnumber-maven-plugin will generate ${buildNumber} from git SHA (requires scm be configured) -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>buildnumber-maven-plugin</artifactId>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>create</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <doCheck>false</doCheck>
          <!-- if true, enforce no local modifications before packaging -->
          <doUpdate>false</doUpdate>
          <!-- if true, push changes upstream after build -->
        </configuration>
      </plugin>
    </plugins>
  </build>


</project>
